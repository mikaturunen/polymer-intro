title: Docker intro in < 5 mins
author:
  name: Mika Turunen
  twitter: mikaturunen
  email: mika.turunen@ymail.com
  url: http://github.com/mikaturunen
output: index.html
theme: sudodoki/reveal-cleaver-theme

------------------------------------------------------------------------

![logo][logo]

[logo]: logo.png

------------------------------------------------------------------------

### Installation

Docker Engine is supported on Linux, Cloud, Windows, and OS X.

* [Install Docker Engine](https://docs.docker.com/engine/installation/#installation)



------------------------------------------------------------------------

### Docker 101

Docker containers wrap up a piece of software in a complete filesystem that contains everything it needs to run: code, runtime, system tools, system libraries â€“ anything you can install on a server. This guarantees that it will always run the same, regardless of the environment it is running in.

------------------------------------------------------------------------

### Docker terminology

* Image
* Container
* Docker Hub / Registry

------------------------------------------------------------------------

### How does it work

* Images are read-only templates
* Docker uses union file system (UnionFS, other alternatives possible)
* Union file systems allow files and directories of separate file systems, known as branches, to be transparently overlaid, forming a single coherent file system.


------------------------------------------------------------------------

### What is a typical VM

<center>
<img style="width: 500px; padding-top: 10px;" src="what-is-docker-diagram.png"></img>
</center>

------------------------------------------------------------------------

### What is Docker

<center>
<img style="width: 500px; padding-top: 10px;" src="what-is-vm-diagram.png"></img>
</center>

------------------------------------------------------------------------

### What else?

* Scalability
* Reusability
* Dev, QA, Production = same

------------------------------------------------------------------------

### Examples, MariaDb

* https://hub.docker.com/_/mariadb/

```bash
$ docker run --name some-mariadb -e MYSQL_ROOT_PASSWORD=my-secret-pw -d mariadb:tag
```

Connect to MySQL from an application in another Docker container

```bash
$ docker run --name some-app --link some-mariadb:mysql -d application-that-uses-mysql
```

------------------------------------------------------------------------

### Examples, WordPress

* https://hub.docker.com/_/wordpress/

```bash
$ docker run --name some-wordpress --link some-mysql:mysql -p 8080:80 -d wordpress

```

Or if you'd like to use an external database instead of a linked mysql container, specify the hostname and port with WORDPRESS_DB_HOST along with the password in WORDPRESS_DB_PASSWORD and the username in WORDPRESS_DB_USER (if it is something other than root):


```bash
$ docker run --name some-wordpress -e WORDPRESS_DB_HOST=10.1.2.3:3306 \
    -e WORDPRESS_DB_USER=... -e WORDPRESS_DB_PASSWORD=... -d wordpress
```

------------------------------------------------------------------------

### Examples, Couchdb

* https://hub.docker.com/r/klaemo/couchdb/

```bash
sudo docker pull klaemo/couchdb:latest
sudo docker run -d -p 5984:5984 --name couchdb klaemo/couchdb
curl http://localhost:5984
```
